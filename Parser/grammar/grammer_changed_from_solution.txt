prog classDeclList progBody classDecl funcDefList progBody funcHead funcDef funcBody statementList arraySizeList statement assignStat statBlock expr relExpr arithExpr sign term factor variable indiceList indice arraySize type fParams fParamsTailList aParams aParamsTailList fParamsTail aParamsTail assignOp relOp addOp multOp arithExpr1 term1 varFuncDeclList varFuncDeclList1 varStateList expr1 factor1 variable1 varDeclOrAssign varDeclOrAssignTail
class id { } ; program ( ) if then else for get put return EPSILON_VALUE + - num not [ ] int float , . = == <> < > <= >= or and * / and
prog
prog->classDeclList progBody
classDeclList->classDecl classDeclList|EPSILON_VALUE
classDecl->class id { varFuncDeclList } ;
varFuncDeclList->type id varFuncDeclList1 varFuncDeclList|EPSILON_VALUE
varFuncDeclList1->arraySizeList ;|( fParams ) funcBody ;
funcDefList->funcDef funcDefList|EPSILON_VALUE
funcDef->funcHead funcBody ;
funcHead->type id ( fParams )
funcBody->{ statementList }
statementList->statement statementList|EPSILON_VALUE
statement->varDeclOrAssign|if ( expr ) then statBlock else statBlock ;|for ( type id assignOp expr ; relExpr ; assignStat ) statBlock ;|get ( variable ) ;|put ( expr ) ;|return ( expr ) ;
varDeclOrAssign->id varDeclOrAssignTail|int id arraySizeList ;|float id arraySizeList ;
varDeclOrAssignTail->id arraySizeList ;|indiceList variable1 assignOp expr ;
progBody->program funcBody ; funcDefList
arraySizeList->arraySize arraySizeList|EPSILON_VALUE
assignStat->variable assignOp expr
statBlock->{ statementList }|statement|EPSILON_VALUE
expr->arithExpr expr1
expr1->relOp arithExpr|EPSILON_VALUE
relExpr->arithExpr relOp arithExpr
arithExpr->term arithExpr1
arithExpr1->addOp term arithExpr1|EPSILON_VALUE
sign->+|-
term->factor term1
term1->multOp factor term1|EPSILON_VALUE
factor->id indiceList factor1|int|float|( arithExpr )|not factor|sign factor
factor1->. id indiceList factor1|( aParams )|EPSILON_VALUE
variable->id indiceList variable1
variable1->. id indiceList variable1|EPSILON_VALUE
indiceList->indice indiceList|EPSILON_VALUE
indice->[ arithExpr ]
arraySize->[ int ]
type->int|float|id
fParams->type id arraySizeList fParamsTailList|EPSILON_VALUE
fParamsTailList->fParamsTail fParamsTailList|EPSILON_VALUE
aParams->expr aParamsTailList|EPSILON_VALUE
aParamsTailList->aParamsTail aParamsTailList|EPSILON_VALUE
fParamsTail->, type id arraySizeList
aParamsTail->, expr
assignOp->=
relOp->==|<>|<|>|<=|>=
addOp->+|-|or
multOp->*|/|and